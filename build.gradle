import org.apache.tools.ant.filters.ReplaceTokens

buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${version_spring_boot}")
    }
}

apply plugin: "idea"
apply plugin: "java"
apply plugin: "org.springframework.boot"

group = "org.wickedsource"
version = "1.0.0-SNAPSHOT"

repositories {
    mavenCentral()
    mavenLocal()
}

configurations {
    dev
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-data-jpa:${version_spring_boot}"
    compile "org.springframework.boot:spring-boot-starter-thymeleaf:${version_spring_boot}"
    compile "org.springframework.boot:spring-boot-starter-security:${version_spring_boot}"
    compile "org.springframework.boot:spring-boot-starter-actuator:${version_spring_boot}"
    compile "org.apache.commons:commons-lang3:3.4"
    compile "org.hibernate:hibernate-core:${version_hibernate}"
    compile "org.hibernate:hibernate-java8:${version_hibernate}"
    compile "org.hibernate:hibernate-validator:${version_hibernate}"
    compile "com.h2database:h2:1.4.191"
    compile "org.apache.commons:commons-exec:1.3"
    compile "commons-io:commons-io:2.5"

    // update to 3.0.0.RELEASE once spring-boot-starter-thymeleaf pulls thymeleaf 3.0
    compile "org.thymeleaf.extras:thymeleaf-extras-java8time:2.1.0.RELEASE"

    dev "org.springframework.boot:spring-boot-devtools:${version_spring_boot}"

    testCompile "org.springframework.boot:spring-boot-starter-test:${version_spring_boot}"
    testCompile "junit:junit:4.12"
    testCompile "org.slf4j:slf4j-ext:1.7.21"
    testCompile "org.assertj:assertj-core:3.5.1"
    testCompile "com.github.springtestdbunit:spring-test-dbunit:1.3.0"
    testCompile "org.dbunit:dbunit:2.5.3"

}

processResources {
    filter ReplaceTokens, tokens: [
            "gitanizer.version": version
    ]
}

task zip(type: Zip, dependsOn: bootRepackage) {
    from("build/libs") {
        include "*.jar"
    }
    from("src/main/config") {
        include "application.properties"
    }
}

build.dependsOn(zip)

bootRun {
    classpath = sourceSets.main.runtimeClasspath + configurations.dev
    jvmArgs =
            [
                    // application configuration
                    "-Dgitanizer.workdir=D:\\gitanizer",
                    "-Dgitanizer.subgit.executable.path=D:\\programs\\subgit-3.2.2\\bin\\subgit.bat",
                    "-Dgitanizer.git.executable.path=git",
                    "-Dgitanizer.importTasks.maxThreads=5",
                    "-Dgitanizer.importTasks.intervalInSeconds=10",

                    // debugging
                    "-Xdebug",
                    "-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005",

                    // logging
                    "-Dlogging.level.org.wickedsource=DEBUG",
                    "-Dlogging.level.org.hibernate.SQL=ERROR",
                    "-Dlogging.level.org.hibernate.type=ERROR",
                    "-Dlogging.file=gitanizer.log",

                    // hibernate
                    "-Dspring.jpa.hibernate.ddl-auto=create",

                    // file based H2 datasource
                    "-Dspring.datasource.url=jdbc:h2:file:C:/gitanizer/database",
                    "-Dspring.datasource.username=sa",
                    "-Dspring.datasource.password=sa",
                    "-Dspring.datasource.driverClassName=org.h2.Driver",
                    "-Dspring.datasource.data=file:src/test/resources/testdata.sql"
            ]
}
